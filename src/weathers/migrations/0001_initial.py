# Generated by Django 5.2.4 on 2025-08-07 12:42

import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код провайдера')),
                ('name', models.CharField(max_length=255, verbose_name='Название провайдера')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='Конфигурация')),
                ('update_schedule', models.JSONField(blank=True, default=dict, verbose_name='Расписание обновлений')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Провайдер данных',
                'verbose_name_plural': 'Провайдеры данных',
            },
        ),
        migrations.CreateModel(
            name='MeteoPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Координаты точки')),
                ('timezone', models.CharField(max_length=100, verbose_name='Часовой пояс')),
                ('search_radius_m', models.PositiveIntegerField(default=5000, verbose_name='Радиус привязки, м')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('last_fetch_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Статус последней загрузки')),
                ('last_fetched_at', models.DateTimeField(blank=True, null=True, verbose_name='Последняя успешная загрузка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Метео-точка',
                'verbose_name_plural': 'Метео-точки',
                'indexes': [models.Index(fields=['last_fetched_at'], name='weathers_me_last_fe_5df1d5_idx'), django.contrib.postgres.indexes.GistIndex(fields=['point'], name='weathers_me_point_2ca173_gist')],
            },
        ),
        migrations.CreateModel(
            name='MeteoPointProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.JSONField(blank=True, default=dict, verbose_name='Статус')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('meteo_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weathers.meteopoint', verbose_name='Метео-точка')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weathers.provider', verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Связь метео-точка ↔ провайдер',
                'verbose_name_plural': 'Связи метео-точка ↔ провайдер',
                'unique_together': {('provider', 'meteo_point')},
            },
        ),
        migrations.CreateModel(
            name='CalculatedIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_code', models.CharField(max_length=100, verbose_name='Код показателя')),
                ('value', models.JSONField(verbose_name='Значение')),
                ('calculated_at', models.DateTimeField(verbose_name='Дата расчёта')),
                ('params', models.JSONField(blank=True, default=dict, verbose_name='Параметры')),
                ('meteo_point_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='weathers.meteopointprovider', verbose_name='Связь метео-точка ↔ провайдер')),
            ],
            options={
                'verbose_name': 'Агро-показатель',
                'verbose_name_plural': 'Агро-показатели',
            },
        ),
        migrations.CreateModel(
            name='ProviderToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credentials', models.JSONField(verbose_name='Учётные данные')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Срок действия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to='weathers.provider', verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Токен провайдера',
                'verbose_name_plural': 'Токены провайдеров',
            },
        ),
        migrations.CreateModel(
            name='ProviderTokenStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.JSONField(blank=True, default=dict, verbose_name='Метаданные')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='weathers.providertoken', verbose_name='Токен')),
            ],
            options={
                'verbose_name': 'Статистика токена',
                'verbose_name_plural': 'Статистика токенов',
            },
        ),
        migrations.CreateModel(
            name='PointsOfInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Координаты')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_interests', to='companies.company', verbose_name='Компания')),
                ('meteo_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_interests', to='weathers.meteopoint', verbose_name='Метео-точка')),
            ],
            options={
                'verbose_name': 'Точка интереса',
                'verbose_name_plural': 'Точки интереса',
                'indexes': [models.Index(fields=['company', 'is_active'], name='weathers_po_company_19a0d2_idx'), models.Index(fields=['meteo_point'], name='weathers_po_meteo_p_ba5120_idx'), django.contrib.postgres.indexes.GistIndex(fields=['point'], name='weathers_po_point_f9d334_gist')],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=255, verbose_name='Параметр')),
                ('timestamp_utc', models.DateTimeField(verbose_name='Время (UTC)')),
                ('value', models.JSONField(verbose_name='Значение')),
                ('data_type', models.CharField(choices=[('forecast_15m', 'Прогноз 15 мин'), ('forecast_hourly', 'Прогноз почасовой'), ('forecast_daily', 'Прогноз дневной'), ('history_15m', 'История 15 мин'), ('history_hourly', 'История почасовая'), ('history_daily', 'История дневная')], max_length=20, verbose_name='Тип данных')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
                ('meteo_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_data', to='weathers.meteopoint', verbose_name='Метео-точка')),
            ],
            options={
                'verbose_name': 'Погодные данные',
                'verbose_name_plural': 'Погодные данные',
                'indexes': [models.Index(fields=['meteo_point', 'timestamp_utc'], name='weathers_we_meteo_p_23735a_idx'), models.Index(fields=['parameter', 'timestamp_utc'], name='weathers_we_paramet_314a11_idx')],
            },
        ),
    ]
